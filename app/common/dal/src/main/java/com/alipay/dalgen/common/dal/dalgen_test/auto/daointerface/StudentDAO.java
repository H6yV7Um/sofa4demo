/**
 * Alipay.com Inc.
 * Copyright (c) 2004-2018 All Rights Reserved.
 */
package com.alipay.dalgen.common.dal.dalgen_test.auto.daointerface;

import com.alipay.dalgen.common.dal.dalgen_test.auto.dataobject.StudentDO;
import java.util.List;
import com.iwallet.biz.common.util.PageList;

/**
 * A dao interface provides methods to access database table <tt>student</tt>.
 *
 * This file is generated by <tt>dalgen-dalgen</tt>, a DAL (Data Access Layer)
 * code generation utility specially developed for <tt>dalgen</tt> project.
 * 
 * PLEASE DO NOT MODIFY THIS FILE MANUALLY, or else your modification may
 * be OVERWRITTEN by someone else. To modify the file, you should go to directory <tt>dalgen</tt>, 
 * and find the corresponding configuration file (<tt>tables/student.xml</tt>). 
 * Modify the configuration file according to your needs, then run <tt>dalgen-dalgen</tt> to generate this file.
 */
public interface StudentDAO {

	/**
	 *  Insert one <tt>StudentDO</tt> object to DB table <tt>student</tt>, return primary key
	 *
   	 *  <p>
   	 *  Description for this operation is<br>
   	 *  <tt></tt>
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>INSERT INTO student (name, school) VALUES (?, ?)</tt>
	 *
	 *	@param student student
	 *	@return int
	 */	 
    public int insert(StudentDO student);

	/**
	 *  Delete records from DB table <tt>student</tt>.
	 *
   	 *  <p>
   	 *  Description for this operation is<br>
   	 *  <tt></tt>
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>DELETE FROM student WHERE id = ?</tt>
	 *
	 *	@param id id
	 *	@return int
	 */	 
    public int delete(int id);

	/**
	 *  Update DB table <tt>student</tt>.
	 *
   	 *  <p>
   	 *  Description for this operation is<br>
   	 *  <tt></tt>
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>UPDATE student SET name = ? WHERE id = ?</tt>
	 *
	 *	@param name name
	 *	@param id id
	 *	@return int
	 */	 
    public int update(String name, int id);

	/**
	 *  Query DB table <tt>student</tt> for records.
	 *
   	 *  <p>
   	 *  Description for this operation is<br>
   	 *  <tt></tt>
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>SELECT * FROM student WHERE id = ?</tt>
	 *
	 *	@param id id
	 *	@return StudentDO
	 */	 
    public StudentDO select(int id);

	/**
	 *  Query DB table <tt>student</tt> for records.
	 *
   	 *  <p>
   	 *  Description for this operation is<br>
   	 *  <tt></tt>
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>SELECT * FROM student WHERE school = ?</tt>
	 *
	 *	@param school school
	 *	@return List<StudentDO>
	 */	 
    public List<StudentDO> selectList(String school);

	/**
	 *  Query DB table <tt>student</tt> for records.
	 *
   	 *  <p>
   	 *  Description for this operation is<br>
   	 *  <tt></tt>
	 *  <p>
	 *  The sql statement for this operation is <br>
	 *  <tt>SELECT * FROM student WHERE school = ? ORDER BY name</tt>
	 *
	 *	@param school school
	 *	@param pageSize pageSize
	 *	@param pageNum pageNum
	 *	@return PageList
	 */	 
    public PageList selectWithPaging(String school, int pageSize, int pageNum);

}